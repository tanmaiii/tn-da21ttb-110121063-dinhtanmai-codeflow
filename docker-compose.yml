version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: codeflow-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_DATABASE:-codeflow}
      MYSQL_USER: ${DB_USER:-codeflow_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/database:/docker-entrypoint-initdb.d
    networks:
      - codeflow-network

  # Backend API Server
  backend:
    build: ./src/server
    container_name: codeflow-backend
    restart: unless-stopped
    environment:
      # ===== BACKEND CONFIGURATION =====
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      
      # Database Configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${DB_USER:-codeflow_user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_DATABASE: ${DB_DATABASE:-codeflow}
      
      # Security & Auth
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      ORIGIN: ${ORIGIN:-http://localhost:3002}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3002}
      CREDENTIALS: true
      
      # Logging
      LOG_FORMAT: ${LOG_FORMAT:-combined}
      LOG_DIR: ./logs
      
      # GitHub Integration (Backend)
      ORGANIZATION_NAME: ${ORGANIZATION_NAME:-organization-codeflow}
      GITHUB_TOKEN: ${GITHUB_TOKEN:-}
      GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET:-}
      WEBHOOK_URL: ${WEBHOOK_URL:-}
      
      # AI & Analysis Services
      GEMINI_TOKEN: ${GEMINI_TOKEN:-}
      SONAR_TOKEN: ${SONAR_TOKEN:-}
      SONAR_ORG_TOKEN: ${SONAR_ORG_TOKEN:-}
      
      # Email Configuration
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      SMTP_FROM: ${SMTP_FROM:-}
    ports:
      - "${BACKEND_PORT:-3001}:3000"
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    networks:
      - codeflow-network
    depends_on:
      - mysql
      - redis

  # Frontend Next.js App
  frontend:
    build: ./src/client
    container_name: codeflow-frontend
    restart: unless-stopped
    environment:
      # ===== FRONTEND CONFIGURATION =====
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3002
      HOSTNAME: "0.0.0.0"
      
      # Next.js Public API Configuration
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      NEXT_PUBLIC_SECRET_KEY: ${NEXT_PUBLIC_SECRET_KEY:-}
      NEXT_PUBLIC_ORG_NAME: ${NEXT_PUBLIC_ORG_NAME:-organization-codeflow}
      
      # GitHub OAuth for NextAuth
      GITHUB_ID: ${GITHUB_ID:-}
      GITHUB_SECRET: ${GITHUB_SECRET:-}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3002}
      
      # Firebase Configuration
      NEXT_PUBLIC_FIREBASE_API_KEY: ${NEXT_PUBLIC_FIREBASE_API_KEY:-}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN:-}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${NEXT_PUBLIC_FIREBASE_PROJECT_ID:-}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET:-}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID:-}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${NEXT_PUBLIC_FIREBASE_APP_ID:-}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID:-}
    ports:
      - "${FRONTEND_PORT:-3002}:3002"
    networks:
      - codeflow-network
    depends_on:
      - backend

  # Redis
  redis:
    image: redis:7-alpine
    container_name: codeflow-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - codeflow-network

volumes:
  mysql_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  redis_data:
    driver: local

networks:
  codeflow-network:
    driver: bridge
